package at.bitfire.ical4android.validation

import at.bitfire.ical4android.Ical4Android
import net.fortuna.ical4j.model.TimeZone
import net.fortuna.ical4j.model.TimeZoneRegistry

/**
 * Wrapper around [TimeZoneRegistry] that rejects timezone updates that can't be handled by
 * ical4j.
 *
 * For instance, some "Europe/Dublin" VTIMEZONEs generated by Google causes problems:
 * https://github.com/ical4j/ical4j/issues/493
 *
 * So updates for these VTIMEZONEs will be ignore and the default time zones remain active.
 */
class ValidatingTimeZoneRegistry(
    private val delegate: TimeZoneRegistry
): TimeZoneRegistry by delegate {

    override fun register(timezone: TimeZone) {
        // TODO: Maybe don't reject only by name, but by the actual condition that causes the problem?
        if (timezone.id == "Europe/Dublin")
            Ical4Android.log.warning("Ignoring definition for time zone ${timezone.id} because it can't be processed properly")
        else
            delegate.register(timezone)
    }

}